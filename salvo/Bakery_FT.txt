16. Estude a função void clearAll(). ELA ESTÁ ERRADA. Localize e corrija o erro.

17. Todas as funções que estão em a02ex03.cpp são iguais às da programação estruturada, no sentido de que não pertencem a classes (não são métodos). Assim, o programa é um "C com classes" mais que "orientado a objetos". Reverta esta situação da seguinte maneira:

18. Crie uma classe "MyProgram" que encapsule, agora como métodos privados, as funcões de a02ex03.cpp.

19. verboseMode, shortMessageMode e myMainList devem ser atributos privados de MyProgram. Acabam-se as variáveis globais !!!

20. Crie os métodos públicos get / set para verboseMode e shortMessageMode.

21. Crie um método público void start() para MyProgram, com todo o conteúdo da atual main, EXCETO: verifyArguments(argc, argv); Elime a atual main de a02ex03.cpp, deixe só o start.

22. Crie os arquivos hpp e cpp com o nome "FT_bakery" e crie nele a função main. Vai ser o novo ponto de entrada.

23. Passe void verifyArguments(int argc, char* argv[]) para FT_bakery, fazendo ajustes necessários em hpp e cpp's.

24. Na função main (que agora está SÓ em FT_bakery), crie DINAMICAMENTE um objeto MyProgram, use os set's para ajustar verboseMode e shortMessageMode e chame start. Dessa forma, todo o processamento ficará a cargo do objeto e não de funções soltas.

25. A padaria vai começar a vender leite, água, refrigerante e cerveja. Crie uma classe "Liquid", derivada de "Food" com os atributos comuns a todos estes novos produtos.

26. Crie as classes "Milk", "Water", "Soda" e "Beer". Crie também 4 derivadas de Beer, correspondentes a diferentes tipos de cerveja.

27. Altere MyProgram para acomodar estes novos produtos. No menu de inserção, ao escolher "Beer", um novo submenu deve ser aberto, somente com os tipos de cerveja. Faça o código conforme a estrutura já fornecida (veja como é aberto um submenu, ...).

28. Veja que é possível continuar com o programa SEM ALTERAR o código de void listItems() e de void clearAll().

29. Faça a limpeza do código: elimine #include's desnecessários, acerte formatação, apague todos os trechos de código comentado (não os comentários de documentação), ordene os métodos e verifique se os escopos de visibilidade estão adequados.

30. Mostre em sala, para avaliação, estes procedimentos concluídos. Veja os prazos da atividade no Moodle.

31. Após a avaliação, poste UM .zip com todo o código no Moodle.

Bom trabalho.

